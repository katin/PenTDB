SYSTEM_NOTES.txt
----------------
System notes for the PenTDB pentest tracking tool.

  07-Jul-2019 - something was hosing up Firefox on Kali using PenTDB... I'd go to refresh a page or click on a link and it would just spin. Not sure if it was networking, maria-db, Firefox, apache2, or something else. One new factor was the logest watchfile so far: a good run of smb-scan1 script. I'm hoping the html-encode of watch files helps.


TODO LIST
---------
[x] Add watchfile(s) fields to add-host form (with presets from config file)

[_] add info_desc field to porttest to hold tips, setup info, or task description
[x] implement display watchfile on vuln page

[_] fix grouping of records (set TITLE at front) of host in-line status summary
[x] Add "UNSTABLE" (worked but unstable) status to Vulns
[_] Document how to add/uses tests for Exfiltration and other non-port specific things (port 1)
[_] Figure out how to document/support privilege escalation -- more test port 1's?
[_] Add some kind of "working storage pad" -- see LAB3 notes for Joe in KeepNote
[x] Add additional watchfile fields to host record on dev box (where did they go?)
    [_] export new fresh copy of basic db?

[_] Add individual tests (e.g. Deploy WAR file) -- maybe they all are 0,0 in pass,weight
    [_] Add scrolling display / chooser to add individual tests to a port
    
[_] add new record type 'template' that will be the parent id for tests in that set
[_] add new field 'template' to porttest to group tests into a template (w/o limits on port# and service name) -- only for template side; this doesn't go over to the testinstance table
[_] add template filter to maintenance master table
[_] FIX CONSISTENCY - sometimes using rec_id as form parm and other times using recid! *Why?*

[x] Add config-per-environment (multiple machines in one config file, auto-switch)
[_] fix data path

[_] add export of host - JSON?

[_] It'd be nice to have an msfvenom test that could auto-gen the command options and track what you tried and what works... maybe with a watchfile of the payload for easy copy-paste into custom exploits

[_] ADD TEST SETS:
    [_] buffer overflow
    [_] MSSQL
    [_] Port 47001 
    [_] MySQL 3306
    [_] 

[x] Add porttest maintenance screen
    [_] with export

[_] Add "myIP" address field to the HOST record to allow scripts parms to fill in local IP
    -- OR, to the session record, which is more universal, but requires:
      [_] Add edit session link and form(s) (which woul dbe handy to fix the data directory anyway)

[_] change $vuln parm in URL to recid so it is better for objectives, too

[_] add caching of vars in pentdb_get_page_vars() ?

[_] add login point w/creds storage. 
Similar fields to a testinstance, and can have multiple tests per login point (with templates...), but, can't really use the current testinstance record because there could be multiple logins on the same port and protocol... Hmmm, unless we had multiple login protocols, like login1, login2, login3, login4, and login5... then all those could be on the same port.

[_] maybe add a timer function? Or a field that can record total time worked on.

[_] add data export: session or host (ip), CSV export of the database (for post-test saving).

[_] add a "vuln score" number that we can display: an expression of how many factors (out of 10?) match the target and match a working vuln. Add this display to the hover-title of the vulns status line.



DONE LIST
---------
[x] add button to switch from BINARY to DEPTH statustype, and DEPTH to BINARY
[x] remove extra reset button on test status button sets
[x] add html-encode for watch files displays
[x] add display of any non-blank "Discovered" fields (all tests) on host page
    [x] add jump-link to the discovery with the test auto-expanded
[x] add indicator for TITLE records to the in-line host indicators display on the session page
[x] add function to "make template" from a test set from a service page
[x] add fold-out host status indicators on session page
[x] add points display on sessions page
[x] add active-indicators in-line display for hosts on session page
[x] add host status display with color-coding on sessions page
[x] add hostname display to the ip list page (host select page)
[x] add quicklinks to top of service page to add vuln, add objective, and add test
[x] add irid display somewhere on each test block - maybe with a copy button for a mysql command to modify the record title
[x] add EDB number to the vuln-hover info title
[x] add banner to hover on title record of service status display
[x] set add service form to default to DEPTH test type. 
[x] Set ALL TITLE records to be DEPTH (in .dat files and open db porttest and testinstance)
[x] add cross-links between sessions and template maintenance
[x] add TITLE type back into new test template (for now)
[x] add port filter to maintenance master table
[x] add service filter to maintenance master table
[x] add display & update of raw_result and discovered long text fields
[x] update button for cmd lines on tests page
[x] Add watchfile display to host page
[x] remove bkgnd color for non-selected services in top banner
[x] Add test template maintenance page
    [x] add delete test button
[x] Add check & error msg - service cannot be blank when adding a new service
[x] escape/addslashes/clean-quotes in CMD and PROCESS lines
[x] clear port from URL on vuln display to fox erroneous hilighting
[x] expand notes field on vuln display
[x] add jump-to and expand to service page test display for newly added test
[x] add multiple watch files for host
[x] add auto-expand for any anchor-point requested by click

[X] add auto-import of data from exploit-db.com vuln URLs (in add vuln routine) :D

[x] Add host record data display and update form
    [x] OS, version, SP, architecture, etc. fields to match vulns qualifications
    [x] add lessons learned field?
    [x] flags captured (proof)
    [N] creds starter spot? No - just add creds records later
    [x] Notes
[x] Refactor all display pages code to use host record
[x] Remove HOST record type from .dat files (porttest data)

[x] Add Objectives w/display and edit

[x] add display of watch file
    [x] add display and update of watch_file field
    [x] add expandable field display of the watch_file with content present indicator

[x] remove XML parser

[x] copy button for cmd lines on host record

[-] add test for presence of the PHPDoc module; skip using XML parser if absent.
    (use string search instead of the XML Doc for those functions).




GENERAL
-------
This tool was built quickly, and while it is being continously improved, it isn't an ideal example of a web app.
Also, perhaps ironically, it is insecure and should be run ONLY on the local box/VM that you are using for pentesting. DO NOT EXPOSE THIS WEB INTERFACE/APP TO THE OPEN INTERNET, IT IS NOT SECURE.

PenTDB is intended as a local tool, like a sheaf of paper on your desk to track hosts, tests, and notes while pentesting. It can replace apps like KeepNote with a specialized set of data fields and displays that help you keep track of what tests have been run on each port of each machine, the results, and the path you followed to get root.



RECTYPES
--------
The testinstance table has a 'rectypes' field:

   SESSION = Session record that holds session information, like the tank/data directory
      HOST = Holds the IP address (and port 0) of a host. Functions as an anchor for test instances for this host.
     TITLE = Test series title (e.g., "http - port 80").

   SCAN, TOOL, SCRIPT, or EXAMINE = types of test instances.

Test sets are grouped by protocol and port number.



BINARY STATUS
-------------
An empty status field shows a gray indicator button - no action has been taken yet.
An "IN-PROGRESS" status shows light orange, that the test is running.

A POS status shows as a green indicator: test completed with a useful data/path forward.
A NEG status shows as a red indicator: test showed no results / no clues / no path.

Either way, the test is completed with either a POS or NEG status, which marks the test title bar with a GREEN background (completed).


DEPTH STATUS
------------



RESULT FIELDS
-------------
The 'process_result_cmd' field can hold a command for copy-paste, a note or explaination, a web link, or a file display command:

file:nikto-scan-$port.txt
... will look in the HOST record for the path (which is likely something like "home/katin/workarea/hackthebox/$ip/") for the filename given, and then display it (if it exists) with a click.


LEGEND:
  R] - Required
  S] - Static / Special / preSet
  O] - Optional
  U] - Unused
  X] - Prohibited


Record Type SESSION
-------------------
SESSION records hold the session-specific info, mainly where the data tanks are in the directory path.
This allows shell commands to be run from the web pages as well as script output files to be displayed on the web pages.

R] session_id
S] ip_address = 'NA'
U] pass_depth

...hmmm... might want to create a separate table instead of re-purposing fields.

CREATE TABLE `sessions` (
  `sid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `session_id` varchar(96) NOT NULL DEFAULT '',
  `data_path` varchar(255) NOT NULL DEFAULT '',
  `cmd_path` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`sid`),
  KEY `main` (`session_id`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8;




HOST type records start with just the session_id and ip_address, and can be used to hold notes, creds found, and other such host information.


Record Type HOST
----------------
The HOST record uses the same record layout (table) as test (testinstance), but the fields take on different functions. The changed-function fields are below. Other fields not listed have the same functions/meanings as a test instance.

S] rectype - varchar(16) - 'HOST'

O] status - varchar(16) - (empty), SCANNED, SHELL, ROOT
O] title - varchar(127) - host name

pass_depth - tinyint(4) - 
port - int(10) - 

service - varchar(127) - hostname, if/when known
banner - varchar(127) - machine OS version and patch level, if/when known

statustype - varchar(16) - 
cmd - longtext - 
process_result_cmd - longtext - 
 
order_weight - tinyint(4) - 
raw_result - longtext - 
discovered - longtext - 

O] flags - varchar(255) - 
O] notes - longtext - available for user notes





VULNS Table should include:
---------------------------

vid- int(10) unsigned NOT NULL AUTO_INCREMENT,
created- timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
session_id- varchar(96) NOT NULL DEFAULT '',
ip_address- varchar(39) NOT NULL DEFAULT '',
port- int(10) unsigned NOT NULL DEFAULT '0',
service- varchar(127) NOT NULL DEFAULT '',


rating: 		MATCH, POSSIBLE, UNLIKLEY, EXCLUDED
status: 		UNTRIED (empty), WORKED, FAILED/EXCLUDE, FAILED/TWEAKABLE, 
pass_depth: 	n

EDB_ID: 		exploit-db.com number
type: 			LOCAL, WEBAPP, DOS, REMOTE,
EDB_verified: 	y/n






SYSTEM_NOTES.txt
----------------
System notes for the PenTDB pentest tracking tool.


TODO LIST
---------
[_] add display of watch file

[_] add display & update of raw_result and discovered long text fields

[_] update button for cmd lines

[_] add export of host - JSON?

[_] Add individual tests (e.g. Deploy WAR file)
    [_] Add scrolling display / chooser to add individual tests to a port

[_] Add Objectives

[_] ADD TEST SETS:
    [_] buffer overflow
    [_] MSSQL
    [_] Port 47001 
    [_] MySQL 3306
    [_] 

[_] Add porttest maintenance screen
    [_] with export


[x] Add host record data display and update form
    [x] OS, version, SP, architecture, etc. fields to match vulns qualifications
    [x] add lessons learned field?
    [x] flags captured (proof)
    [N] creds starter spot? No - just add creds records later
    [x] Notes
[x] Refactor all display pages code to use host record
[_] Remove HOST record type from .dat files (porttest data)


[_] change $vuln parm in URL to recid so it works for objectives, too

[_] remove XML parser

[_] add test for presence of the PHPDoc module; skip using XML parser if absent.
    (use string search instead of the XML Doc for those functions).

[_] add caching of vars in pentdb_get_page_vars()

[_] add login point w/creds storage. 
Similar fields to a testinstance, and can have multiple tests per login point (with templates...), but, can't really use the current testinstance record because there could be multiple logins on the same port and protocol... Hmmm, unless we had multiple login protocols, like login1, login2, login3, login4, and login5... then all those could be on the same port.

[_] add data export: session or host (ip), CSV export of the database (for post-test saving).

[_] add a "vuln score" number that we can display: an expression of how many factors (out of 10?) match the target and match a working vuln. Add this display to the hover-title of the vulns status line.


DONE LIST
---------
[X] add auto-import of data from exploit-db.com vuln URLs (in add vuln routine) :D




GENERAL
-------
This tool was built quickly, and while it is being continously improved, it isn't an ideal example of a web app.
Also, perhaps ironically, it is quite insecure and should be run ONLY on the local box/VM that you are using for pentesting. DO NOT EXPOSE THIS WEB INTERFACE/APP TO THE OPEN INTERNET, IT IS NOT SECURE.

PenTDB is intended as a local tool, like a sheaf of paper on your desk to track hosts, tests, and notes while pentesting.



RECTYPES
--------
The testinstance table has a 'rectypes' field:

   SESSION = Session record that holds session information, like the tank/data directory
      HOST = Holds the IP address (and port 0) of a host. Functions as an anchor for test instances for this host.
     TITLE = Test series title (e.g., "http - port 80").

   SCAN, TOOL, SCRIPT, or EXAMINE = types of test instances.

Test sets are grouped by protocol and port number.



BINARY STATUS
-------------
An empty status field shows a gray indicator button - no action has been taken yet.
An "IN-PROGRESS" status shows light orange, that the test is running.

A POS status shows as a green indicator: test completed with a useful data/path forward.
A NEG status shows as a red indicator: test showed no results / no clues / no path.

Either way, the test is completed with either a POS or NEG status, which marks the test title bar with a GREEN background (completed).


DEPTH STATUS
------------



RESULT FIELDS
-------------
The 'process_result_cmd' field can hold a command for copy-paste, a note or explaination, a web link, or a file display command:

file:nikto-scan-$port.txt
... will look in the HOST record for the path (which is likely something like "home/katin/workarea/hackthebox/$ip/") for the filename given, and then display it (if it exists) with a click.


LEGEND:
  R] - Required
  S] - Static / Special / preSet
  O] - Optional
  U] - Unused
  X] - Prohibited


Record Type SESSION
-------------------
SESSION records hold the session-specific info, mainly where the data tanks are in the directory path.
This allows shell commands to be run from the web pages as well as script output files to be displayed on the web pages.

R] session_id
S] ip_address = 'NA'
U] pass_depth

...hmmm... might want to create a separate table instead of re-purposing fields.

CREATE TABLE `sessions` (
  `sid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `session_id` varchar(96) NOT NULL DEFAULT '',
  `data_path` varchar(255) NOT NULL DEFAULT '',
  `cmd_path` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`sid`),
  KEY `main` (`session_id`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8;




HOST type records start with just the session_id and ip_address, and can be used to hold notes, creds found, and other such host information.


Record Type HOST
----------------
The HOST record uses the same record layout (table) as test (testinstance), but the fields take on different functions. The changed-function fields are below. Other fields not listed have the same functions/meanings as a test instance.

S] rectype - varchar(16) - 'HOST'

O] status - varchar(16) - (empty), SCANNED, SHELL, ROOT
O] title - varchar(127) - host name

pass_depth - tinyint(4) - 
port - int(10) - 

service - varchar(127) - hostname, if/when known
banner - varchar(127) - machine OS version and patch level, if/when known

statustype - varchar(16) - 
cmd - longtext - 
process_result_cmd - longtext - 
 
order_weight - tinyint(4) - 
raw_result - longtext - 
discovered - longtext - 

O] flags - varchar(255) - 
O] notes - longtext - available for user notes





VULNS Table should include:
---------------------------

vid- int(10) unsigned NOT NULL AUTO_INCREMENT,
created- timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
session_id- varchar(96) NOT NULL DEFAULT '',
ip_address- varchar(39) NOT NULL DEFAULT '',
port- int(10) unsigned NOT NULL DEFAULT '0',
service- varchar(127) NOT NULL DEFAULT '',


rating: 		MATCH, POSSIBLE, UNLIKLEY, EXCLUDED
status: 		UNTRIED (empty), WORKED, FAILED/EXCLUDE, FAILED/TWEAKABLE, 
pass_depth: 	n

EDB_ID: 		exploit-db.com number
type: 			LOCAL, WEBAPP, DOS, REMOTE,
EDB_verified: 	y/n





